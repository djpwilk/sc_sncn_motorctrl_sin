/**

\page apps
\section test_torque-ctrl

This test application illustrates usage of module_ctrl_loops to do torque control 
of motor 

The main application runs 9 threads in total. 2 of these threads are PWM Server and 
Commutation Server responsible for modulation and motor drive. 

Other 2 threads used for position information are Hall Server thread required for BLDC 
motor commutation and/or Torque controller and QEI Server thread for high precision 
position information for Torque control loop. One ADC Server thread to capture current
in the motor phases. A watchdog server is used to monitor CORE 3 and disables motor 
in case of emergency.

All these 6 threads run on CORE 3 which has physical connection to the interface module (IFM). 
Now that we have the interface drive servers setup and running on CORE 3. We can run 
Torque Control Loop on CORE 2/1/0. Torque Control consists of two threads one for phase
currents filtering and other one for torque control loop. The controller calculates the
torque.

Another thread for profile torque client runs on core 0/1/2. The client function shows
how to set new target torque for the controller and read back actual torque. The client 
function also shows how to make use of XSCOPE to probe/store data in real-time.

More information about Torque Control Server/ Client can be found under module_ctrl_loops Readme

Dependencies: module_adc module_blocks module_common module_commutation module_ctrl_loops
module_hall module_profile module_pwm_common module_pwm_symmetrical module_qei module_sm 
sc_somanet-base/module_nodeconfig

*/